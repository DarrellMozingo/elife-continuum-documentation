NAME: PPP workflow descrption
SPEC-VERSION: 0.1
MODIFIED: 2015-04-29

domain: publish # vs dev, vs staging, etc. 
publishing policy: automatic # vs manual, vs time-delayed 
exceptions list: /var/config/ppp/article_exceptions.yaml # sets a list of articles that need to be treated differently from the main pubilshing policy 

journal: eLife

article types:
  - research vor
  - research poa
  - feature
  - editorial
  - correction
  - insight


article workflows:
  research vor: research poa workflow
  research poa: research vor workflow
  feature: research vor workflow
  editorial: research vor workflow
  correction: research vor workflow
  insight: research vor workflow 


valid stages:
  - assembly
  - publish
  - downstream
  - archive


workflows:
  research poa workflow:
    assembly:
      prepare poa content:
        order: strict
        timing: cron
          cron directive: 11:00 GMT
    publish:
      publish to drupal:
        order: strict
      crossref:
        config: default
      pub email:
        config: default
      pubmed:
        config: default
    archive:
      s3 archive:
        config: default

  research vor workflow:
    assembly:
      prepare vor content:
        order: strict
        timing: cron
          cron directive: 11:00 GMT
    publish:
      publish to drupal:
        order: strict
      crossref:
        config: default
      pub email:
        config: default
      pubmed:
        config: default
    downstream:
      sendgage:
        config: default
      pubrouter:
        config: default
    archive:
      s3 archive:
        config: default

# some convienience steps
prepare poa content:
  xml_generation:
    config: default
  img_generation:
    config: detault

prepare vor content:
  xml_generation:
    config: default
  img_generation:
    config: detault
  pdf_stamping:
    config: default
  video_encoding:
    config: default

publish to drupal:
  public_file_hosting:
    config: default
  search_population:
    config: default
  drupal:
    config: default

# default options
default config options:
  ---
  xml_generation:
    order: strict
    timer: immediate
    overwrite: true
    append: false
  ---
  img_generation:
    order: strict
    timer: immediate
    overwrite: true
    append: false
  ---
  pdf_date_stamping:
    order: loose
    timer: immediate
    overwrite: true
    append: false
  ---
  pdf_decapitation:
    order: loose
    timer: immediate
    overwrite: true
    append: false
  ---
  video_encoding:
    order: loose
    timer: immediate
    overwrite: true
    append: false
  ---
  public_file_hosting:
    order: loose
    timer: immediate
    overwrite: true
    append: false
  ---
  search_population:
    order: loose
    timer: immediate
    overwrite: true
    append: false
  ---
  drupal:
    order: strict
    timer: immediate
    overwrite: true
    append: false
  ---
  crossref:
    order: loose
    timer: immediate
    overwrite: true
    append: false
  ---
  pub email:
    order: loose
    timer: immediate
    overwrite: false
    append: false
  ---
  pubmed:
    order: loose
    timer: immediate
    overwrite: true
    append: false
  ---
  sendgage:
    order: loose
    timer: immediate
    overwrite: true
    append: false
  ---
  pubrouter:
    order: loose
    timer: immediate
    overwrite: true
    append: false
  ---
    s3 archive:
      order: loose
      timer: immediate
      overwrite: false
      append: true


#############
# sets to workflow mappings
# could be mapped into a separate config file
workflow mappings:
  crossref: activity_DepositCrossref
  lens: activity_LensArticle 
  pub_router: activity_PubRouterDeposit
  pub email: activity_PublicationEmail
  s3 archive: ??


##############
# description of notation
# order:
#   determins whether a step has to complete before
#   further steps start. Options are strict or loose
#
# timer:
#   determines whether a process can run when ready or
#   whether it needs to wait for a particular time.
#   If it needs a particular time a cron diretive should be
#   supplied
#
# overwrite:
#   determines whether the result of the step will overwrite
#   or resend to a destinatio that it has sent to before
#   options are true or false
#
# append:
#   determines whether the result of the process appends
#   informaiton to the destination
#   options are true or flase

#############
# some open questions
#
# is it a good idea to be able to create collections of actions
#
# does YAML offer a better way of referencing nodes in a YANL document than the one outlined here?
#
# should we explicitly map names of porcesses to SWF workflow stesp
# or should that be left to the application layer to decide?
#
# can we actual implement this control structure?
#
# can we createa nice interface for writing these YAML files?
